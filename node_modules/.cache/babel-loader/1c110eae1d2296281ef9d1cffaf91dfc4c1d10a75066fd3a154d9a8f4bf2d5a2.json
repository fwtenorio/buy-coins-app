{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PageLogin = _resolveComponent(\"PageLogin\");\n  const _component_PageHeader = _resolveComponent(\"PageHeader\");\n  const _component_PageTransactionsCreate = _resolveComponent(\"PageTransactionsCreate\");\n  const _component_PageTransactions = _resolveComponent(\"PageTransactions\");\n  return $options.shouldRenderApp ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_PageLogin)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_PageHeader), _createVNode(_component_PageTransactionsCreate), _createVNode(_component_PageTransactions)]));\n}","map":{"version":3,"names":["key","id","$options","shouldRenderApp","_createElementBlock","_hoisted_1","_createVNode","_component_PageLogin","_hoisted_2","_component_PageHeader","_component_PageTransactionsCreate","_component_PageTransactions"],"sources":["/app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" v-if=\"shouldRenderApp\">\n    <PageLogin />\n  </div>\n  <div v-else>\n    <PageHeader />\n    <PageTransactionsCreate />\n    <PageTransactions />\n  </div>\n</template>\n\n<script>\n  import PageHeader from './components/PageHeader.vue';\n  import PageTransactions from './components/PageTransactions.vue';\n  import PageTransactionsCreate from './components/PageTransactionsCreate.vue';\n  import PageLogin from './components/PageLogin.vue';\n\nconsole.log('TOken ->>>>'+ sessionStorage.getItem('token'))\n  export default {\n    name: 'App',\n    components: {\n      PageHeader,\n      PageTransactionsCreate,\n      PageTransactions,\n      PageLogin\n    },\n    data() {\n      return {\n        isLoggedUser: false\n      };\n    },\n    computed: {\n      shouldRenderApp() {\n        return !sessionStorage.getItem('token');\n      }\n    },\n    mounted() {\n      const hasToken = sessionStorage.getItem('token');\n      if (hasToken) {\n        this.isLoggedUser = true;\n      }\n    },\n    methods: {\n    }\n  }\n</script>\n\n<style>\n  #app {\n    margin-top: 40px;\n  }\n</style>\n"],"mappings":";;EAAAA,GAAA;EACOC,EAAE,EAAC;;;EADVD,GAAA;AAAA;;;;;;SACsBE,QAAA,CAAAC,eAAe,I,cAAnCC,mBAAA,CAEM,OAFNC,UAEM,GADJC,YAAA,CAAaC,oBAAA,E,oBAEfH,mBAAA,CAIM,OARRI,UAAA,GAKIF,YAAA,CAAcG,qBAAA,GACdH,YAAA,CAA0BI,iCAAA,GAC1BJ,YAAA,CAAoBK,2BAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}