{"ast":null,"code":"export default {\n  name: 'UserRegisterForm',\n  data() {\n    return {\n      users: [],\n      coins: [],\n      selectedCoin: '',\n      inputAmount: '',\n      totalToPay: '',\n      totalToBuy: '',\n      showModal: false,\n      showTotalToPay: false,\n      showTotalToBuy: false,\n      btnBuyActive: false,\n      btnBuyLabel: 'COMPRAR!',\n      token: sessionStorage.getItem('token')\n    };\n  },\n  mounted() {\n    this.fetchListCoin();\n  },\n  methods: {\n    handleClickAmount() {\n      this.isLoading = true;\n      this.selectedCoin = '';\n      this.btnBuyActive = false;\n      this.totalToPay = '';\n      this.totalToBuy = '';\n    },\n    // Requisição POST para criar um novo usuário\n    async fetchListCoin() {\n      try {\n        const response = await fetch('http://localhost:8000/api/coins', {\n          method: 'GET',\n          headers: {\n            'Authorization': this.token\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.coins = data.data;\n        } else {\n          console.error('Erro na requisição:', response.status);\n        }\n      } catch (error) {\n        console.error('Erro:', error.message);\n      }\n    },\n    async fetchCoinData() {\n      try {\n        if (this.inputAmount !== '') {\n          this.btnBuyLabel = 'CARREGANDO...';\n          const response = await fetch('http://localhost:8000/api/coins/price-rate', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json',\n              'Authorization': this.token\n            },\n            body: JSON.stringify({\n              amount: this.inputAmount,\n              coin: this.selectedCoin\n            })\n          });\n          if (response.ok) {\n            const data = await response.json();\n            this.showTotalToPay = true;\n            this.showTotalToBuy = true;\n            this.totalToPay = `BRL ${data.data.totalPayWithRate}`;\n            this.totalToBuy = `${data.data.shortName} ${data.data.totalBuy}`;\n            this.btnBuyLabel = 'COMPRAR!';\n            this.btnBuyActive = true;\n          } else {\n            this.totalToPay = '';\n            this.totalToBuy = '';\n            this.btnBuyActive = false;\n          }\n        }\n      } catch (error) {\n        console.error('Erro:', error.message);\n      }\n    },\n    async sendBuy() {\n      try {\n        this.btnBuyLabel = 'AGUARDE...';\n        this.btnBuyActive = false;\n        const response = await fetch('http://localhost:8000/api/transactions', {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': this.token\n          },\n          body: JSON.stringify({\n            amount: this.inputAmount,\n            coin: this.selectedCoin\n          })\n        });\n        if (response.ok) {\n          window.location.reload();\n        } else {\n          console.error('Erro na requisição:', response.status);\n        }\n      } catch (error) {\n        console.error('Erro:', error.message);\n      }\n    }\n  },\n  computed: {\n    modalClass() {\n      return this.showModal ? 'show' : '';\n    }\n  }\n};","map":{"version":3,"names":["name","data","users","coins","selectedCoin","inputAmount","totalToPay","totalToBuy","showModal","showTotalToPay","showTotalToBuy","btnBuyActive","btnBuyLabel","token","sessionStorage","getItem","mounted","fetchListCoin","methods","handleClickAmount","isLoading","response","fetch","method","headers","ok","json","console","error","status","message","fetchCoinData","body","JSON","stringify","amount","coin","totalPayWithRate","shortName","totalBuy","sendBuy","window","location","reload","computed","modalClass"],"sources":["/Library/WebServer/Documents/sistemas/app-teste/buy-coins/frontend/src/components/PageTransactionsCreate.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <button v-on:click=\"showModal = !showModal\" class=\"btn btn-primary mr-1 float-right\"><b>Nova Transação</b></button>\n    <div v-bind:class=\"modalClass\" class=\"modal-container\">\n      <div class=\"user-modal\">\n        <h3 class=\"text-primary\">COMPRAR MOEDA</h3>\n        <br>\n        <form @submit.prevent=\"sendBuy\">\n          <div class=\"form-group\">\n            <label for=\"quantity\">Quantidade que deseja comprar (mínino: 50,00)</label>\n            <input required v-model=\"inputAmount\" @click=\"handleClickAmount\" type=\"text\" id=\"amount\" class=\"form-control\" placeholder=\"R$ 0,00\"/>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"name\">Selecione a moeda de compra</label>\n            <select v-model=\"selectedCoin\" @change=\"fetchCoinData\" :disabled=\"inputAmount < 50\">\n              <option value=\"\" disabled selected>Selecione uma moeda</option>\n              <option v-for=\"coin in coins\" :key=\"coin.name\" :value=\"coin.code\">{{ coin.name }}</option>\n            </select>\n          </div>\n          <div class=\"form-group\" v-if=\"showTotalToPay\">\n            <label for=\"totalToPay\">Valor total a pagar (incluindo taxa de serviço)</label>\n            <input type=\"text\" v-model=\"totalToPay\" class=\"form-control\" disabled>\n          </div>\n\n          <div class=\"form-group\" v-if=\"showTotalToBuy\">\n            <label for=\"totalToPay\">Você estará comprando:</label>\n            <input type=\"text\" v-model=\"totalToBuy\" class=\"form-control\" disabled>\n          </div>\n          <br><br>\n          <div>\n            <button v-on:click.prevent=\"showModal = !showModal\" class=\"btn btn-secondary mr-1 mb-2\">CANCELAR</button>\n            <button :disabled=\"(inputAmount != '' && parseFloat(inputAmount) < 50) || !btnBuyActive\" class=\"btn btn-primary mr-1 mb-2\"><b>{{ btnBuyLabel }}</b></button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'UserRegisterForm',\n    data() {\n      return {\n        users: [],\n        coins: [],\n        selectedCoin: '',\n        inputAmount: '',\n        totalToPay: '',\n        totalToBuy: '',\n        showModal: false,\n        showTotalToPay: false,\n        showTotalToBuy: false,\n        btnBuyActive: false,\n        btnBuyLabel: 'COMPRAR!',\n        token: sessionStorage.getItem('token')\n      };\n    },\n    mounted() {\n      this.fetchListCoin();\n    },\n    methods: {\n      handleClickAmount() {\n        this.isLoading = true;\n        this.selectedCoin = '';\n        this.btnBuyActive = false;\n        this.totalToPay = '';\n        this.totalToBuy = '';\n      },\n      // Requisição POST para criar um novo usuário\n      async fetchListCoin() {\n        try {\n          const response = await fetch('http://localhost:8000/api/coins', {\n            method: 'GET',\n            headers: {\n              'Authorization': this.token\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            this.coins = data.data;\n          } else {\n            console.error('Erro na requisição:', response.status);\n          }\n        } catch (error) {\n          console.error('Erro:', error.message);\n        }\n      },\n      async fetchCoinData() {\n        try {\n          if (this.inputAmount !== '') {\n            this.btnBuyLabel = 'CARREGANDO...';\n            const response = await fetch('http://localhost:8000/api/coins/price-rate', {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json',\n                'Authorization': this.token\n              },\n              body: JSON.stringify({\n                amount: this.inputAmount,\n                coin: this.selectedCoin\n              })\n            });\n            if (response.ok) {\n              const data = await response.json();\n              this.showTotalToPay = true;\n              this.showTotalToBuy = true;\n              this.totalToPay = `BRL ${data.data.totalPayWithRate}`;\n              this.totalToBuy = `${data.data.shortName} ${data.data.totalBuy}`;\n              this.btnBuyLabel = 'COMPRAR!';\n              this.btnBuyActive = true;\n            } else {\n              this.totalToPay = '';\n              this.totalToBuy = '';\n              this.btnBuyActive = false;\n            }\n          }\n        } catch (error) {\n          console.error('Erro:', error.message);\n        }\n      },\n      async sendBuy() {\n        try {\n          this.btnBuyLabel = 'AGUARDE...';\n          this.btnBuyActive = false;\n          const response = await fetch('http://localhost:8000/api/transactions', {\n            method: 'POST',\n            headers: {\n              'Content-type': 'application/json',\n              'Authorization': this.token\n            },\n            body: JSON.stringify({\n              amount: this.inputAmount,\n              coin: this.selectedCoin\n            })\n          });\n          if (response.ok) {\n            window.location.reload();\n          } else {\n            console.error('Erro na requisição:', response.status);\n          }\n        } catch (error) {\n          console.error('Erro:', error.message);\n        }\n      }\n    },\n    computed: {\n      modalClass() {\n        return this.showModal ? 'show' : '';\n      }\n    }\n  };\n</script>\n\n<style>\n  .modal-container {\n    position: fixed;\n    background-color: rgba(0, 0, 0, 0.3);\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.3s ease-in-out;\n  }\n\n  .modal-container.show {\n    opacity: 1;\n    pointer-events: auto;\n  }\n\n  .user-modal {\n    color: #535353;\n    background-color: #fff;\n    background-image: url(\"../assets/background.jpg\");\n    width: 450px;\n    padding: 40px 50px;\n    max-width: 100%;\n    border-radius: 10px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n  }\n\n  .user-modal h1 {\n    margin: 0;\n  }\n\n  .user-modal p {\n    opacity: 0.9;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}